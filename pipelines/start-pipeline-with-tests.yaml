# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
 

trigger:
- none

pool:
  name: 'Host Pool - Linux'

variables:
  azureServiceConnection: 'Azure DevOps'
  location: 'westeurope'
  resourceGroupName: 'debont-test-rg'
  storageAccountName: 'subariosstorage12345'
  templateFile: './learning/Tutorial1.bicep'

stages: 
- stage: 'pre_test'
  displayName: 'Pre-deployment Tests'
  jobs: 
  - job: PreDeploymentTests
    displayName:  'Pre-deployment Tests'
    steps:
    - checkout: self
    - task: AzurePowerShell@5
      displayName: "Run Pre-deployment tests"
      inputs:
        azureSubscription: $(azureServiceConnection)
        ScriptType: "Inlinescript"
        Inline: |
           Set-Location ./pre-tests
           Invoke-Pester -CI -Output Detailed
        pwsh: 'true'   
        azurePowershellVersion: 'LatestVersion'
        errorActionPreference: "continue"

    - task: PublishTestResults@2
      displayName: "Publish Pre-deployment Test Results"
      condition: in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues', 'Failed')
      inputs:
          testRunner: "NUnit"
          testResultsFormat: "NUnit"
          testResultsFiles: |
             $(System.DefaultWorkingDirectory)/**/test*.xml
          failTaskOnFailedTests: 'true'
          testRunTitle: "Validate Task Files"

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'JaCoCo'
        summaryFileLocation: '**/Pester-Coverage.xml'
        pathToSources: $(System.DefaultWorkingDirectory)
        failIfCoverageEmpty: true


- stage: DeployStorageAccount
  displayName: 'Deploy Storage Account'
  jobs:
  - job: DeployStorageAccount
    steps:
    - task: AzureResourceManagerTemplateDeployment@3 # more info: https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/azure-resource-manager-template-deployment-v3?view=azure-pipelines
      displayName: 'Tutorial 1'
      inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: '$(azureServiceConnection)'
          action: 'Create Or Update Resource Group'
          resourceGroupName: '$(resourcegroupName)'
          location: '$(location)'
          templateLocation: 'Linked artifact'
          csmFile: '$(templateFile)'
          overrideParameters: ''
          deploymentMode: 'Incremental'
          deploymentName: 'Tutorial1'

- stage: 'post_test'
  displayName: 'Post-deployment Tests'
  jobs: 
  - job: PostDeploymentTests
    displayName:  'Post-deployment Tests'
    steps:
    - task: AzurePowerShell@5
      displayName: "Run Post-deployement tests"
      inputs:
        azureSubscription: $(azureServiceConnection)
        ScriptType: "Inlinescript"
        Inline: |
           Set-Location ./post-tests
           Invoke-Pester -CI -Output Detailed
        pwsh: 'true'   
        azurePowershellVersion: 'LatestVersion'
        errorActionPreference: "continue"

    - task: PublishTestResults@2
      displayName: "Publish Post-deployment Test Results"
      condition: in(variables['Agent.JobStatus'], 'Succeeded', 'SucceededWithIssues', 'Failed')
      inputs:
          testRunner: "NUnit"
          testResultsFormat: "NUnit"
          testResultsFiles: |
             $(System.DefaultWorkingDirectory)/**/test*.xml
          failTaskOnFailedTests: 'true'
          testRunTitle: "Validate Task Files"

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'JaCoCo'
        summaryFileLocation: '**/Pester-Coverage.xml'
        pathToSources: $(System.DefaultWorkingDirectory)
        failIfCoverageEmpty: true
